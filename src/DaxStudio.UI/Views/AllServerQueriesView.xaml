<UserControl x:Class="DaxStudio.UI.Views.AllServerQueriesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:extenders="clr-namespace:DaxStudio.UI.AttachedProperties"    
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:custom="clr-namespace:DaxStudio.UI.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             BorderBrush="DimGray" BorderThickness="1">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/LabelSpinnerStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <conv:EventClassSubclassConverter x:Key="EventClassSubclass"></conv:EventClassSubclassConverter>
            <conv:QuerySingleLineConverter x:Key="QuerySingleLine"></conv:QuerySingleLineConverter>
            <conv:QueryMultiLineConverter x:Key="QueryMultiLine"></conv:QueryMultiLineConverter>
            <conv:XmSqlToDocumentConverter x:Key="XmSqlToDocument"></conv:XmSqlToDocumentConverter>
            <conv:MultiplyConverter x:Key="MultiConverter"></conv:MultiplyConverter>
            <conv:BoolToHiddenConverter x:Key="BoolToVisibilityConverter" />
            <sys:Double x:Key="BarWidth">100.0</sys:Double>

            <DataTemplate x:Key="QueryTextCell">
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                              Margin="0"
                              MaxHeight="70">
                    <!--   Height="{Binding ElementName=QueryText ,Path=ActualHeight,Converter={StaticResource CappedHeightConverter}, ConverterParameter='55'}"-->
                    <DataGridCell Margin="0" 
                                  Padding="0" 
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick($datacontext)]">
                        <TextBlock x:Name="Query"
                            Text="{Binding Path=Query,Mode=OneWay}"  
                            VerticalAlignment="Top" 
                            HorizontalAlignment="Left"   
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="WrapWithOverflow"
                            ToolTip="{Binding Query}">
                        </TextBlock>

                    </DataGridCell>
                </ScrollViewer>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Width="Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <controls:DataGridNoContextMenu x:Name="QueryEvents" 
                  SelectedItem="{Binding SelectedQuery}" 
                  HorizontalAlignment="Stretch" 
                  AutoGenerateColumns="False"
                  behaviours:GridViewColumnResize.Enabled="True" 
                  VerticalAlignment="Stretch" 
                  Background="White" 
                  Width="Auto"
                  SelectionMode="Extended"
                  SelectionUnit="FullRow"
                  HeadersVisibility="Column"
                  ClipboardCopyMode="ExcludeHeader"
                  ScrollViewer.CanContentScroll="False"
                  FrozenColumnCount="1"
                  GridLinesVisibility="None" BorderThickness="1,0,0,0" BorderBrush="{x:Null}"
                  >

            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="AlignRight" TargetType="{x:Type TextBlock}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight"
                  Value="SemiBold" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <EventSetter Event="Control.RequestBringIntoView" Handler="DataGrid_RequestBringIntoView"  />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <!--<DataGridTextColumn Header="StartTime" IsReadOnly="True" Width="65" Binding="{Binding StartTime, StringFormat='hh:mm:ss'}"  />-->
                <DataGridTextColumn Header="StartTime" IsReadOnly="True" Width="65" Binding="{Binding StartTime}"  />
                <DataGridTextColumn Header="Duration" IsReadOnly="True" Width="60" Binding="{Binding Duration, StringFormat='#,0'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="Username" IsReadOnly="True" Width="70" MinWidth="70" Binding="{Binding Username}"  />

                <DataGridTemplateColumn Header="Query" Width="*" CellTemplate="{StaticResource QueryTextCell}" />
                
                <!--<DataGridTextColumn Header="Query" behaviours:GridViewColumnResize.Width="Auto"
                                    IsReadOnly="True" Binding="{Binding Query, Converter={StaticResource QuerySingleLine}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightQuery}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
-->
            </DataGrid.Columns>
        </controls:DataGridNoContextMenu>


        <!-- Busy overlay -->
        <Border 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                Grid.RowSpan="3" 
            Grid.ColumnSpan="5"
            Style="{StaticResource BusyPanel}" d:IsHidden="True">

            <Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Label Style="{StaticResource LabelSpinnerStyle}" Height="30" VerticalContentAlignment="Center"  FontSize="18" FontWeight="Bold" Foreground="#D0000000" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock x:Name="BusyMessage"/>
                    </Label>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
